#!/usr/bin/env bash
set -e

# Get the current directory
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

repo_name="$1"
clone_path="$2"

if [ -z "$repo_name" ]; then
  echo "Usage: $0 <repo_name>"
  exit 1
fi

# Get Repo Name to clone
repo_name=$(echo $repo_name | sed 's/.*github.com\///g') # Remove everything before github.com
repo_name=$(echo $repo_name | sed 's/\.git//g') # Remove .git if present
repo_name=$(echo $repo_name | sed 's/.*\///g') # Remove everything before the last slash

echo "ðŸš€ Setting up $repo_name ðŸš€"

# parse last folder name
FOLDER_NAME=${PWD##*/}

REPO_ID=$(gh api graphql -F owner="$FOLDER_NAME" -F name="$repo_name" -f query='
    query($name: String!, $owner: String!) {
      repository(owner: $owner, name: $name) {
        id
      }
    }
' --jq ".data.repository.id")

if [ -z "$REPO_ID" ]; then
  echo "ðŸš¨ Repo not found ðŸš¨"
  exit 1
fi

# Clone the repo
gh repo clone "$FOLDER_NAME/$repo_name" $clone_path -- --depth=1